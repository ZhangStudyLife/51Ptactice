C51 COMPILER V9.60.7.0   NIXIE                                                             09/22/2024 13:51:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE NIXIE
OBJECT MODULE PLACED IN .\Objects\Nixie.obj
COMPILER INVOKED BY: D:\KEILC51\C51\BIN\C51.EXE Nixie.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Nix
                    -ie.lst) OBJECT(.\Objects\Nixie.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          
   4          // 数码管显示缓存区
   5          unsigned char Nixie_Buf[9] = {0, 10, 10, 10, 10, 10, 10, 10, 10};
   6          
   7          // 数码管段码表
   8          unsigned char NixieTable[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x00, 0x40};
   9          
  10          /**
  11            * @brief  设置显示缓存区
  12            * @param  Location 要设置的位置，范围：1~8
  13            * @param  Number 要设置的数字，范围：段码表索引范围
  14            * @retval 无
  15            */
  16          void Nixie_SetBuf(unsigned char Location, unsigned char Number)
  17          {
  18   1          if (Location >= 1 && Location <= 8) // 参数检查，避免越界
  19   1          {
  20   2              Nixie_Buf[Location] = Number;
  21   2          }
  22   1      }
  23          
  24          /**
  25            * @brief  数码管扫描显示
  26            * @param  Location 要显示的位置，范围：1~8
  27            * @param  Number 要显示的数字，范围：段码表索引范围
  28            * @retval 无
  29            */
  30          void Nixie_Scan(unsigned char Location, unsigned char Number)
  31          {
  32   1          P0 = 0x00;  // 段码清0，消影
  33   1          switch (Location) // 位码输出
  34   1          {
  35   2              case 1: P2_4 = 1; P2_3 = 1; P2_2 = 1; break;
  36   2              case 2: P2_4 = 1; P2_3 = 1; P2_2 = 0; break;
  37   2              case 3: P2_4 = 1; P2_3 = 0; P2_2 = 1; break;
  38   2              case 4: P2_4 = 1; P2_3 = 0; P2_2 = 0; break;
  39   2              case 5: P2_4 = 0; P2_3 = 1; P2_2 = 1; break;
  40   2              case 6: P2_4 = 0; P2_3 = 1; P2_2 = 0; break;
  41   2              case 7: P2_4 = 0; P2_3 = 0; P2_2 = 1; break;
  42   2              case 8: P2_4 = 0; P2_3 = 0; P2_2 = 0; break;
  43   2          }
  44   1          P0 = NixieTable[Number];  // 段码输出
  45   1      }
  46          
  47          /**
  48            * @brief  数码管驱动函数，在中断中调用
  49            * @param  无 
  50            * @retval 无
  51            */
  52          void Nixie_Loop(void)
  53          {
  54   1          static unsigned char i = 1;
C51 COMPILER V9.60.7.0   NIXIE                                                             09/22/2024 13:51:56 PAGE 2   

  55   1          Nixie_Scan(i, Nixie_Buf[i]); // 每次中断显示一位数码管
  56   1          i++;
  57   1          if (i >= 9)
  58   1          {
  59   2              i = 1;  // 循环扫描
  60   2          }
  61   1      }
  62          
  63          
  64          // #include <REGX52.H>
  65          
  66          // void Nixie(unsigned char Location, unsigned char Number)
  67          // {
  68          //      switch (Location)
  69          //      {
  70          //      case 1:
  71          //              P2_4 = 0; P2_3 = 0; P2_2 = 0; break;
  72          //      case 2:
  73          //              P2_4 = 0; P2_3 = 0; P2_2 = 1; break;
  74          //      case 3:
  75          //              P2_4 = 0; P2_3 = 1; P2_2 = 0; break;
  76          //      case 4:
  77          //              P2_4 = 0; P2_3 = 1; P2_2 = 1; break;
  78          //      case 5:
  79          //              P2_4 = 1; P2_3 = 0; P2_2 = 0; break;
  80          //      case 6:
  81          //              P2_4 = 1; P2_3 = 0; P2_2 = 1; break;
  82          //      case 7:
  83          //              P2_4 = 1; P2_3 = 1; P2_2 = 0; break;
  84          //      case 8:
  85          //              P2_4 = 1; P2_3 = 1; P2_2 = 1; break;
  86          //      }
  87          //      switch (Number)
  88          //      {
  89          //      case 0:
  90          //              P0 = 0x3F; break;
  91          //      case 1:
  92          //              P0 = 0x06; break;
  93          //      case 2:
  94          //              P0 = 0x5B; break;
  95          //      case 3:
  96          //              P0 = 0x4F; break;
  97          //      case 4:
  98          //              P0 = 0x66; break;
  99          //      case 5:
 100          //              P0 = 0x6D; break;
 101          //      case 6:
 102          //              P0 = 0x7D; break;
 103          //      case 7:
 104          //              P0 = 0x07; break;
 105          //      case 8:
 106          //              P0 = 0x7F; break;
 107          //      case 9:
 108          //              P0 = 0x6F; break;
 109          //      default:
 110          //              P0 = 0x00; break; 
 111          //      }
 112          // }
 113          
 114          
 115          
 116          //#include <REGX52.H>
C51 COMPILER V9.60.7.0   NIXIE                                                             09/22/2024 13:51:56 PAGE 3   

 117          //#include "Delay.h"
 118          
 119          ////数码管显示缓存区
 120          //unsigned char Nixie_Buf[9]={0,10,10,10,10,10,10,10,10};
 121          
 122          ////数码管段码表
 123          //unsigned char NixieTable[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x00,0x40};
 124          
 125          ///**
 126          //  * @brief  设置显示缓存区
 127          //  * @param  Location 要设置的位置，范围：1~8
 128          //  * @param  Number 要设置的数字，范围：段码表索引范围
 129          //  * @retval 无
 130          //  */
 131          //void Nixie_SetBuf(unsigned char Location,Number)
 132          //{
 133          //      Nixie_Buf[Location]=Number;
 134          //}
 135          
 136          ///**
 137          //  * @brief  数码管扫描显示
 138          //  * @param  Location 要显示的位置，范围：1~8
 139          //  * @param  Number 要显示的数字，范围：段码表索引范围
 140          //  * @retval 无
 141          //  */
 142          //void Nixie_Scan(unsigned char Location,Number)
 143          //{
 144          //      P0=0x00;                                //段码清0，消影
 145          //      switch(Location)                //位码输出
 146          //      {
 147          //              case 1:P2_4=1;P2_3=1;P2_2=1;break;
 148          //              case 2:P2_4=1;P2_3=1;P2_2=0;break;
 149          //              case 3:P2_4=1;P2_3=0;P2_2=1;break;
 150          //              case 4:P2_4=1;P2_3=0;P2_2=0;break;
 151          //              case 5:P2_4=0;P2_3=1;P2_2=1;break;
 152          //              case 6:P2_4=0;P2_3=1;P2_2=0;break;
 153          //              case 7:P2_4=0;P2_3=0;P2_2=1;break;
 154          //              case 8:P2_4=0;P2_3=0;P2_2=0;break;
 155          //      }
 156          //      P0=NixieTable[Number];  //段码输出
 157          //}
 158          
 159          ///**
 160          //  * @brief  数码管驱动函数，在中断中调用
 161          //  * @param  无 
 162          //  * @retval 无
 163          //  */
 164          //void Nixie_Loop(void)
 165          //{
 166          //      static unsigned char i=1;
 167          //      Nixie_Scan(i,Nixie_Buf[i]);
 168          //      i++;
 169          //      if(i>=9){i=1;}
 170          //}
 171          
 172          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   NIXIE                                                             09/22/2024 13:51:56 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
